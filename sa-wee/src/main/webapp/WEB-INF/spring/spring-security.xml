<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

	<beans:bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<http auto-config="true" use-expressions="true">
	    <intercept-url pattern="/login" access="ROLE_USER" />
	    <intercept-url pattern="/**" access="permitAll" />
    </http>
    
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="id" password="pw" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<!-- 검사 URL -->
	<!-- <http auto-config="true" use-expressions="true">
		<intercept-url pattern="/loginView" access="ROLE_USER" />
		<intercept-url pattern="/admin/*" access="ROLE_USER" />
		<intercept-url pattern="/*" access="permitAll" />

		<form-login login-page="/loginView" default-target-url="/"
			authentication-failure-url="/loginView?error"
			username-parameter="m_id" password-parameter="m_pw" />

		<logout logout-url="/logout" logout-success-url="/" />
		<access-denied-handler
			error-page="/login/accessDenied" />
	</http>

	<beans:bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean> -->


	<!-- provider -->
	<!-- <authentication-manager> <authentication-provider> <jdbc-user-service 
		data-source-ref="dataSource" users-by-username-query="select m_id, m_pw, 
		1 as enabled from member where m_id = ?" authorities-by-username-query="select 
		m_id, case when r_no='0' then 'ROLE_ADMIN' else 'ROLE_USER' end authority 
		from member where m_id=?" /> -->
	<!-- 로그인 쿼리: 쿼리에서 뽑을 컬럼을 차례로 username, password, enabled 순으로 지정해준다. -->
	<!-- 권한 쿼리: 쿼리에서 뽑을 컬럼을 차례로 username, authority 순으로 지정해주면서, case when 문법으로 
		사용하고 싶은 컬럼의 값을 authority 값의 형식으로 바꾸어주어 spring-security가 인식하도록 해준다! -->
	<!-- </authentication-provider> </authentication-manager> -->

</beans:beans>