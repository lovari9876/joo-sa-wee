<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<bean name="dataSourceSpied"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@192.168.6.13:1521:XE" />
		<property name="username" value="DB_SAWEE" />
		<property name="password" value="JOO" />
	</bean>

	<!-- [Spring] log4jdbc-remix 를 이용한 쿼리로그 출력 -->
	<bean id="dataSource"
		class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL         :  " />
			</bean>
		</property>
	</bean>

	<!-- sqlSession을 생성하는 factory 객체 생성:(factory는 디자인패턴) -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	 <!-- 	<property name="mapperLocations"
			value="classpath:/sqlmap/*.xml" /> -->  <!-- mapper xml읽어들인다 -->
			
		<!-- src/main/resouces 이후 위치 알려준다. -->
		<property name="configLocation" value="classpath:/config/sql-map-config.xml" /> 
	</bean>

	<!-- *** 이것이 바로 mybatis!!! -->
	<!-- 생성자로 받는데, 첫번째 인자로 sqlSessionFactory 받아서 sqlSession 생성 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 3번과 4번 방식을 사용하기 위한 방식임 -->
	<!-- 3번: xml 읽는 대신에 Mapper Interface의 @어노테이션(sql문) 스캔!해서 객체 생성!! -->
	<!-- Mapper Interface -->
	<mybatis-spring:scan base-package="com.soninlawisdice.mapper" /> <!-- mapper 인식 -->

	<!-- 이제 mybatis에서도 스캔함 -->
	
	<!-- @component(service 등) 써있는 클래스를 bean으로 인식 -->
	<context:component-scan base-package="com.soninlawisdice.service" /> 

	<context:component-scan
		base-package="com.soninlawisdice.service" />


</beans>
