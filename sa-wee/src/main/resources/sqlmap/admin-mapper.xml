<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="com.soninlawisdice.mapper.AdminMapper">


	<!-- ================================================List 출력====================================================== -->

	
	<select id="memberList" resultType="com.soninlawisdice.vo.MemberVO" parameterType="com.soninlawisdice.vo.SearchCriteria">

	SELECT * FROM
	(
         SELECT m_no, m_id, m_pw, m_name, m_birth, m_nick,
			m_gender, m_point, m_phone, m_email, m_post, m_addr1, m_addr2,
			r_no, m_re_sms, m_re_notice, m_re_message, m_info, m_self,
			m_indate, m_outdate, m_out, m_report_num, m_extra, f_no,
		               ROW_NUMBER() OVER(ORDER BY m_no DESC) AS RNUM
		         FROM member 
		         WHERE 1=1
		         <include refid="member_search"></include>
		                       ) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY m_no DESC

	</select>
	
	<select id="reportList" resultType="java.util.HashMap" parameterType="com.soninlawisdice.vo.SearchCriteria">

	SELECT * FROM
	(
         SELECT r_no, m_no, r_type, r_type_no, r_content,r_report_date,
		               ROW_NUMBER() OVER(ORDER BY r_no DESC) AS RNUM
		         FROM report 
		         WHERE 1=1
		         <include refid="report_search"></include>
		                       ) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY r_no DESC

	</select>
	
	<select id="boardList" resultType="java.util.HashMap">

	SELECT * FROM
	(
         SELECT bw.bw_no, m.m_no, m.m_id, bt.bt_name, bt.bt_no, s.s_content , bw.bw_title, bw.bw_hit, bw.bw_content, bw.bw_written_date, bw.bw_updated_date, bw.bw_report_num, bw.bw_island,
         			  (SELECT COUNT(*) FROM cm_comment WHERE cm_type ='게시판' AND cm_no2 = bw.bw_no) cm,
		               ROW_NUMBER() OVER(ORDER BY bw.bw_no ASC) AS RNUM,
		               ROW_NUMBER() OVER(ORDER BY bw.bw_no DESC) AS RNUM_COUNT 
		          FROM board_write bw
                 INNER JOIN subject s
                 ON bw.s_no=s.s_no
                 INNER JOIN board_type bt
                 ON bw.bt_no = bt.bt_no
                INNER JOIN member m
                ON bw.m_no=m.m_no
                
             <choose>
                	<when test = "bt_no == 13">
                		WHERE bt.bt_no BETWEEN 1 and 6
                	</when>
                	<otherwise> 
                		WHERE bt.bt_no = #{bt_no}
                	</otherwise>
             </choose> 
		        
		         <include refid="board_search"></include>
		                       )
		WHERE RNUM_COUNT BETWEEN #{scri.rowStart} AND #{scri.rowEnd}
		ORDER BY bw_no DESC

	</select>
	

	
	<select id="wd_recordList" resultType="java.util.HashMap"  parameterType="com.soninlawisdice.vo.SearchCriteria">

	SELECT * FROM
	(
         SELECT  m.m_no, m.m_id, m.m_outdate, w.w_no, w.w_reason, wr.wr_reason,
		               ROW_NUMBER() OVER(ORDER BY m.m_no DESC) AS RNUM
		         FROM wd_record wr, member m, withdrawal w 
		         WHERE m.m_no = wr.m_no and w.w_no = wr.w_no and w.w_no = 5
		         <include refid="withdrawer_search"></include>
		                       ) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		<!-- ORDER BY m_no DESC -->
		<!-- 탈퇴 사유 w_no중 5(주관적사유,기타)를 고른 항목만 출력 -->
	</select>
	
	<select id="cafe_reviewList" resultType="java.util.HashMap" parameterType="com.soninlawisdice.vo.SearchCriteria">
			
			SELECT * FROM (
				SELECT cr.*, m.m_id, c.c_title,
				 (SELECT COUNT(*) FROM cm_comment WHERE cm_type ='카페리뷰' AND cm_no2 = c.c_no) cm,
				ROW_NUMBER() OVER(ORDER BY m.m_no DESC) AS RNUM
				FROM cafe_review cr
				INNER JOIN member m
				ON cr.m_no = m.m_no
				INNER JOIN cafe c
				On cr.c_no = c.c_no
				<include refid="cafe_review_search"></include>
			)MP
			WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
			ORDER BY cr_no DESC
		
	
	</select>


	<select id="faqList" resultType="com.soninlawisdice.vo.FaqVO" parameterType="com.soninlawisdice.vo.SearchCriteria">
			
			SELECT * FROM(
		         SELECT faq_no, s_no, faq_title, faq_content, faq_written_date, faq_updated_date, faq_hit,
				               ROW_NUMBER() OVER(ORDER BY faq_no DESC) AS RNUM
				         FROM faq 
				         WHERE 1=1
		         <include refid="faq_search"></include>
		                       ) MP
				WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
				ORDER BY faq_no DESC
		
	
	</select>
	
	
	
	<!-- =============================================== 페이징처리 + 검색 ====================================================== -->
	
	<select id="board_listCount" resultType="int">

		SELECT COUNT(bw.bw_no)
		  FROM board_write bw
		  LEFT JOIN board_type bt
		  ON bw.bt_no = bt.bt_no
		 
		 <choose>
           <when test = "bt_no == 13"> <!-- 게시글 관리 : 커뮤니티 전체 불러오기  -->
               WHERE bt.bt_no BETWEEN 1 and 6
            </when>
            <otherwise> 
                WHERE bt.bt_no = #{bt_no}
            </otherwise>
         </choose> 
		 <include refid="board_search"></include>	
		 AND bw.bw_no > 0

	</select>
	
	<sql id="board_search">
		<if test="scri.searchType != null">
			<if test="scri.searchType == 't'.toString()">AND bw_title LIKE '%' || #{scri.keyword} || '%'</if>
			<if test="scri.searchType == 'c'.toString()">AND bw_content LIKE '%' || #{scri.keyword} || '%'</if>
			<if test="scri.searchType == 'w'.toString()">AND m_no LIKE '%' || #{scri.keyword} || '%'</if>
			<if test="scri.searchType == 'tc'.toString()">AND (bw_title LIKE '%' || #{scri.keyword} || '%') or (bw_content LIKE '%' || #{scri.keyword} || '%')</if>
		</if>
	</sql>
	
	
	<select id="cafe_review_listCount" parameterType = "com.soninlawisdice.vo.SearchCriteria" resultType="int">

		SELECT COUNT(cr.cr_no)
		  FROM cafe_review cr
		 WHERE 1=1
		 <include refid="cafe_review_search"></include>	
		 AND cr.cr_no > 0

	</select>
	
	<sql id="cafe_review_search">
		<if test="searchType != null">
			<if test="searchType == 'a'.toString()">AND c.c_title LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'b'.toString()">AND cr.cr_title LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'c'.toString()">AND cr.cr_content LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'd'.toString()">AND m.m_id LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'bc'.toString()">AND (cr.cr_title LIKE '%' || #{keyword} || '%') or (cr.cr_content LIKE '%' || #{keyword} || '%')</if>
		</if>
	</sql>
	
	
	
	<select id="member_listCount" parameterType = "com.soninlawisdice.vo.SearchCriteria" resultType="int">
		SELECT COUNT(m_no)
		  FROM member
		 WHERE 1=1
		 <include refid="member_search"></include>	
		 AND m_no > 0

	</select>
	
	<sql id="member_search">
		<if test="searchType != null">
			<if test="searchType == 'a'.toString()">AND m_id LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'b'.toString()">AND m_name LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'c'.toString()">AND m_nick LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'd'.toString()">AND r_no LIKE '%' || #{keyword} || '%'</if>
		</if>
	</sql>
	
	
	
	<select id="report_listCount" parameterType = "com.soninlawisdice.vo.SearchCriteria" resultType="int">

		SELECT COUNT(r_no)
		  FROM report
		 WHERE 1=1
		 <include refid="report_search"></include>	
		 AND r_no > 0

	</select>
	
	<sql id="report_search">
		<if test="searchType != null">
			<if test="searchType == 'a'.toString()">AND m_no LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'b'.toString()">AND r_type_no LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'c'.toString()">AND r_content LIKE '%' || #{keyword} || '%'</if>
		</if>
	</sql>
	
	
	
	<select id="wd_record_listCount" parameterType = "com.soninlawisdice.vo.SearchCriteria" resultType="int">

		 SELECT  COUNT (w.w_no) FROM wd_record wr, member m, withdrawal w 
		         WHERE m.m_no = wr.m_no and w.w_no = wr.w_no and w.w_no = 5
		 <include refid="withdrawer_search"></include>
		 		 AND w.w_no > 0

	</select>
	
	<sql id="withdrawer_search">
		<if test="searchType != null">
			<if test="searchType == 'a'.toString()">AND m.m_id LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'b'.toString()">AND wr.wr_reason LIKE '%' || #{keyword} || '%'</if>
		</if>
	</sql>
	
	
	
	<select id="faq_listCount" parameterType = "com.soninlawisdice.vo.SearchCriteria" resultType="int">
			SELECT COUNT(faq_no)
					  FROM faq
					 WHERE 1=1
				 <include refid="faq_search"></include>	
					 AND faq_no > 0


	</select>
	
	<sql id="faq_search">
		<if test="searchType != null">
			<if test="searchType == 'a'.toString()">AND m_id LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'b'.toString()">AND wr_reason LIKE '%' || #{keyword} || '%'</if>
		</if>
	</sql>
	
	
	
	<!-- =============================================== 글 보기  ====================================================== -->
	

	<select id="selectMemberView" parameterType="com.soninlawisdice.vo.MemberVO" resultType="com.soninlawisdice.vo.MemberVO">
		select * from member where m_no=#{m_no}
	</select>
	
	
	<!-- =============================================== 글 쓰기  ====================================================== -->
	
	<insert id="boardInsert" parameterType="com.soninlawisdice.vo.Board_writeVO" >
		INSERT INTO board_write (bw_no, m_no, bt_no, s_no, bw_title, bw_content, bw_hit, bw_recommend_num, bw_report_num, bw_island, bw_secret) 
		VALUES (board_write_seq.nextval, #{board_writeVO.m_no}, #{board_writeVO.bt_no}, #{board_writeVO.s_no},  #{board_writeVO.bw_title}, #{board_writeVO.bw_content}, 0, 0, 0, 0, 'n' ) 
	
	</insert>
	
	
	<insert id="cafeInsert" parameterType="com.soninlawisdice.vo.CafeVO" >
		INSERT INTO cafe (c_no, c_title, c_add, c_phone, c_people, c_table, c_chair, c_open, c_close, c_rest, c_written_date, c_updated_date, c_hit, bt_no) 
		VALUES (cafe_seq.nextval, #{cafeVO.c_title}, #{cafeVO.c_add}, #{cafeVO.c_phone}, #{cafeVO.c_people}, #{cafeVO.c_table}, #{cafeVO.c_chair}, #{cafeVO.c_open}, #{cafeVO.c_close}, #{cafeVO.c_rest}, sysdate, sysdate, 0, 10) 
	
	</insert>
	
	
	<insert id="faqInsert" parameterType="com.soninlawisdice.vo.FaqVO" >
		INSERT INTO faq (faq_no, s_no, faq_title, faq_content, faq_written_date, faq_updated_date, faq_hit) 
		VALUES (faq_seq.nextval, #{faqVO.s_no}, #{faqVO.faq_title}, #{faqVO.faq_content}, sysdate, sysdate, 0) 
	
	</insert>
	
	
	<!-- =============================================== 신고게시판 글 보기 타입분류 ====================================================== -->	
	
	<select id="selectReportView" resultType="java.util.HashMap">

			
		 SELECT r.*, 
		 
		 <choose>
			<when test='r_type == "게시글"'>
				m.m_id, bw.bw_title, bw.bw_report_num, bw.bw_no, bw.m_no AS r_id
				FROM report r LEFT JOIN member m ON r.m_no= m.m_no 
                LEFT JOIN board_write bw ON r.r_type_no = bw.bw_no WHERE
			</when>
			
			<when test='r_type == "카페리뷰"'>
				m.m_id, cr.cr_title, cr.cr_report_num, cr.cr_no, cr.m_no AS r_id
				FROM report r LEFT JOIN member m ON r.m_no= m.m_no 
                LEFT JOIN cafe_review cr ON r.r_type_no = cr.cr_no WHERE
			</when>
			
			<when test='r_type == "중고거래"'>
				m.m_id, t.t_title, t.t_report_num, t.t_no, t.m_no AS r_id
				FROM report r LEFT JOIN member m ON r.m_no= m.m_no 
                LEFT JOIN trade t ON r.r_type_no = t.t_no WHERE
			</when>
			
			<when test='r_type == "댓글"'>
				m.m_id, cm.cm_content, cm.cm_report_num, cm.cm_no, cm.m_no AS r_id
				FROM report r LEFT JOIN member m ON r.m_no= m.m_no 
                LEFT JOIN cm_comment cm ON r.r_type_no = cm.cm_no WHERE
			</when>
			
			<when test='r_type == "회원"'>
				m1.m_id as m_id, m2.m_id as r_id, m2.m_report_num, m2.m_no as r_m_no
				FROM report r LEFT JOIN member m1 ON r.m_no=m1.m_no
				LEFT JOIN member m2 ON r.r_type_no= m2.m_no WHERE
			</when>
		</choose>
		
			r.r_no=#{r_no} 		

	</select>
	
	
	<!-- =============================================== 회원정보수정 ====================================================== -->	

	<update id="updateMember" parameterType="com.soninlawisdice.vo.MemberVO" >
		update member 
		set m_nick = #{memberVO.m_nick}, m_extra = #{memberVO.m_extra}, m_self = #{memberVO.m_self} 
		where m_no = #{memberVO.m_no}
	</update>
	
	
	<!-- =============================================== 회원 탈퇴처리 ====================================================== -->
	
	<update id="outMember" parameterType="com.soninlawisdice.vo.MemberVO" >
		UPDATE member SET m_out = '0', m_outdate = sysdate where m_no = #{m_no}
	</update>
	

	<!-- =============================================== 무인도행 ====================================================== -->
	
	<!-- 멤버 번호 바로 불러올수 없는 경우 : 글이 신고당함 - 글번호로 멤버번호를 가져옴 -->
	<update id="updateIsland_member" >
		UPDATE member
		SET r_no =  4
		WHERE m_no = (SELECT m_no FROM 
		
		<choose>
			<when test='r_type == "게시글"'>
				board_write WHERE bw_no = #{bw_no})
			</when>
			
			<when test='r_type == "카페리뷰"'>
				cafe_review WHERE c_no = #{bw_no})
			</when>
			
			<when test='r_type == "중고거래"'>
				trade WHERE t_no = #{bw_no})
			</when>
		</choose>
	</update>
	
	<!-- 멤버 번호 바로 불러올수있는 경우  -->
	<update id="updateIsland_memberReport" parameterType="com.soninlawisdice.vo.MemberVO" >
		UPDATE member
		SET r_no =  4 
		WHERE m_no = #{m_no}
	</update>
	
	<update id="updateIsland_bw" parameterType="com.soninlawisdice.vo.Board_writeVO" >
		UPDATE board_write 
		SET bw_island =  1 
		WHERE bw_no = #{bw_no}
	</update>
	
	
	<update id="updateIsland_cafe" parameterType="com.soninlawisdice.vo.Cafe_reviewVO" >
		UPDATE cafe_review
		SET cr_island =  1 
		WHERE cr_no = #{cr_no}
	</update>
	
	
	<update id="updateIsland_trade" parameterType="com.soninlawisdice.vo.TradeVO" >
		UPDATE trade
		SET t_island =  1 
		WHERE t_no = #{t_no}
	</update>

	
	<!-- =============================================== 무인도행 수정완료 컨펌 ====================================================== -->
	
<!-- 	
	<update id="confirmIsland_member" >
		UPDATE member
		SET r_no =  4
		<choose>
			<when test='m_point lte 10000'>
				board_write WHERE bw_no = #{bw_no})
			</when>
			
			<when test='m_point == "카페리뷰"'>
				cafe_review WHERE c_no = #{bw_no})
			</when>
			
			<when test='r_type == "중고거래"'>
				trade WHERE t_no = #{bw_no})
			</when>
		</choose>
		
		
		WHERE m_no = (SELECT m_no FROM 
		
		<choose>
			<when test='r_type == "게시글"'>
				board_write WHERE bw_no = #{bw_no})
			</when>
			
			<when test='r_type == "카페리뷰"'>
				cafe_review WHERE c_no = #{bw_no})
			</when>
			
			<when test='r_type == "중고거래"'>
				trade WHERE t_no = #{bw_no})
			</when>
		</choose>
	</update> -->
	
	
	
	<update id="confirmIsland_bw" parameterType="com.soninlawisdice.vo.Board_writeVO" >
		UPDATE board_write 
		SET bw_island =  0 
		WHERE bw_no = #{bw_no}
	</update>
	
	
	<update id="confirmIsland_cafe" parameterType="com.soninlawisdice.vo.Cafe_reviewVO" >
		UPDATE cafe_review
		SET cr_island =  0 
		WHERE cr_no = #{cr_no}
	</update>
	
	
	<update id="confirmIsland_trade" parameterType="com.soninlawisdice.vo.TradeVO" >
		UPDATE trade
		SET t_island =  0 
		WHERE t_no = #{t_no}
	</update>
	
	
	
	
	
	
	<!-- =============================================== 글 삭제 ====================================================== -->
	
	<delete id="selectDelete" parameterType="com.soninlawisdice.vo.Board_writeVO" >
		delete board_write where bw_no = #{bw_no}
	</delete>
	
	<delete id="selectDelete_cafe" parameterType="com.soninlawisdice.vo.Cafe_reviewVO" >
		delete cafe_review where cr_no = #{cr_no}
	</delete>
	
	<delete id="selectDelete_trade" parameterType="com.soninlawisdice.vo.TradeVO" >
		delete trade where t_no = #{t_no}
	</delete>
	
	<delete id="selectDelete_comment" parameterType="com.soninlawisdice.vo.CM_commentVO" >
		delete cm_comment where cm_no = #{cm_no}
	</delete>
	
	<!-- =============================================== 방문자수  ====================================================== -->
	
	<insert id="setTotalCount" parameterType="com.soninlawisdice.vo.VisitVO">
		INSERT INTO visit (v_date) VALUES (sysdate)
	</insert>
	
	<select id="getTodayCount" parameterType="com.soninlawisdice.vo.VisitVO" resultType="int">
		SELECT COUNT(*) AS TodayCount from VISIT
		WHERE TO_DATE(v_date, 'YYYY-MM-DD') = TO_DATE(sysdate, 'YYYY-MM-DD')
	</select>
	
	<select id="getTotalCount" parameterType="com.soninlawisdice.vo.VisitVO" resultType="int">
		SELECT COUNT(*) AS TotalCount FROM VISIT
	</select>
	
	
	<!-- =============================================== 통계  ====================================================== -->
	
	<insert id="statisticsInsert" parameterType="com.soninlawisdice.vo.StatisticsVO">
		INSERT INTO statistics (st_no, st_date, st_visitor_num, st_post_num, st_trade_num, st_comment_num)
		VALUES (statistics_seq.nextval, sysdate, #{st_visitor_num}, #{st_post_num}, #{st_trade_num}, #{st_comment_num})
	
	</insert>
	
	<select id="getTodayTrade" parameterType="com.soninlawisdice.vo.TradeVO" resultType="int">
		SELECT COUNT(*) AS TRADE_NUM
		FROM TRADE
		WHERE trade.s_no = 34 AND TO_DATE(T_WRITTEN_DATE, 'YYYY-MM-DD') = TO_DATE(sysdate, 'YYYY-MM-DD')
		<!-- s_no 말머리 번호가 34(거래완료)인 값만 체크 -->
	</select>
	
	<select id="getTodayComment" parameterType="com.soninlawisdice.vo.CM_commentVO" resultType="int">
		
		SELECT COUNT(*) AS COMMENT_NUM
		FROM cm_comment
		WHERE TO_DATE(CM_WRITTEN_DATE, 'YYYY-MM-DD') = TO_DATE(sysdate, 'YYYY-MM-DD')

	</select>
	
	<select id="getTodayBoard" parameterType="com.soninlawisdice.vo.Board_writeVO" resultType="int">
		SELECT
				COUNT(*) AS TODAY_POST_NUM
		FROM
			(
			        (SELECT 
			        		T.T_NO AS I_NO, T.BT_NO, T.S_NO, T.M_NO, M.M_NICK, T.T_TITLE AS I_TITLE, T.T_CONTENT AS I_CONTENT, 
			                T.T_WRITTEN_DATE AS I_WRITTEN_DATE, T.T_UPDATED_DATE AS I_UPDATED_DATE, 
			                T.T_HIT AS I_HIT, T.T_RECOMMEND_NUM AS I_RECOMMEND_NUM, T.T_REPORT_NUM AS I_REPORT_NUM, T.T_ISLAND AS I_ISLAND 
			        FROM 	
			        		TRADE T 
			        LEFT JOIN 
			        		MEMBER M 
			        ON 		
			        		T.M_NO = M.M_NO
			       ) 
			
			UNION
			
					(SELECT 
							BW.BW_NO AS I_NO, BW.BT_NO, BW.S_NO, BW.M_NO, M.M_NICK, BW.BW_TITLE  AS I_TITLE, BW.BW_CONTENT AS I_CONTENT, 
							BW.BW_WRITTEN_DATE AS I_WRITTEN_DATE, BW.BW_UPDATED_DATE AS I_UPDATED_DATE, 
			                BW.BW_HIT AS I_HIT, BW.BW_RECOMMEND_NUM AS I_RECOMMEND_NUM, BW.BW_REPORT_NUM AS I_REPORT_NUM, BW.BW_ISLAND AS I_ISLAND 
			        FROM 
			        		BOARD_WRITE BW
			        LEFT JOIN 
			        		MEMBER M
			        ON 
			        		BW.M_NO = M.M_NO
					) 
			
			UNION
			
			        (SELECT 
			        		CR.CR_NO AS I_NO, CR.BT_NO, NULL, CR.M_NO, M.M_NICK, CR.CR_TITLE AS I_TITLE, CR.CR_CONTENT AS I_CONTENT, 
		                    CR.CR_WRITTEN_DATE AS I_WRITTEN_DATE, CR.CR_UPDATED_DATE AS I_UPDATED_DATE, 
		                    CR.CR_HIT AS I_HIT, CR.CR_RECOMMEND_NUM AS I_RECOMMEND_NUM, CR.CR_REPORT_NUM AS I_REPORT_NUM, CR.CR_ISLAND AS I_ISLAND
			        FROM 
			        		CAFE_REVIEW CR
			        LEFT JOIN 
			        		MEMBER M
			        ON 
			        		CR.M_NO = M.M_NO
					 ) 
			)
        WHERE TO_DATE(I_WRITTEN_DATE, 'YYYY-MM-DD') = TO_DATE(sysdate, 'YYYY-MM-DD')
		ORDER BY I_WRITTEN_DATE DESC
	</select>
	
	
	
	<!-- =============================================== index에 출력할 데이터 : 글, 댓글, 회원 전체 수 ====================================================== -->	
	
	
	<select id="allMember" parameterType="com.soninlawisdice.vo.MemberVO" resultType="int">
		SELECT COUNT(*) AS member_NUM FROM MEMBER WHERE M_OUT = '1'
	</select>
	
	
	
	<select id="allComment" parameterType="com.soninlawisdice.vo.CM_commentVO" resultType="int">
		SELECT COUNT(*) AS COMMENT_NUM FROM cm_comment
	</select>	
	
	
	<select id="allBoard" parameterType="com.soninlawisdice.vo.Board_writeVO" resultType="int">
		SELECT
				COUNT(*) AS POST_NUM
		FROM
			(
			        (SELECT 
			        		T.T_NO AS I_NO, T.BT_NO, T.S_NO, T.M_NO, M.M_NICK, T.T_TITLE AS I_TITLE, T.T_CONTENT AS I_CONTENT, 
			                T.T_WRITTEN_DATE AS I_WRITTEN_DATE, T.T_UPDATED_DATE AS I_UPDATED_DATE, 
			                T.T_HIT AS I_HIT, T.T_RECOMMEND_NUM AS I_RECOMMEND_NUM, T.T_REPORT_NUM AS I_REPORT_NUM, T.T_ISLAND AS I_ISLAND 
			        FROM 	
			        		TRADE T 
			        LEFT JOIN 
			        		MEMBER M 
			        ON 		
			        		T.M_NO = M.M_NO
			       ) 
			
			UNION
			
					(SELECT 
							BW.BW_NO AS I_NO, BW.BT_NO, BW.S_NO, BW.M_NO, M.M_NICK, BW.BW_TITLE  AS I_TITLE, BW.BW_CONTENT AS I_CONTENT, 
							BW.BW_WRITTEN_DATE AS I_WRITTEN_DATE, BW.BW_UPDATED_DATE AS I_UPDATED_DATE, 
			                BW.BW_HIT AS I_HIT, BW.BW_RECOMMEND_NUM AS I_RECOMMEND_NUM, BW.BW_REPORT_NUM AS I_REPORT_NUM, BW.BW_ISLAND AS I_ISLAND 
			        FROM 
			        		BOARD_WRITE BW
			        LEFT JOIN 
			        		MEMBER M
			        ON 
			        		BW.M_NO = M.M_NO
					) 
			
			UNION
			
			        (SELECT 
			        		CR.CR_NO AS I_NO, CR.BT_NO, NULL, CR.M_NO, M.M_NICK, CR.CR_TITLE AS I_TITLE, CR.CR_CONTENT AS I_CONTENT, 
		                    CR.CR_WRITTEN_DATE AS I_WRITTEN_DATE, CR.CR_UPDATED_DATE AS I_UPDATED_DATE, 
		                    CR.CR_HIT AS I_HIT, CR.CR_RECOMMEND_NUM AS I_RECOMMEND_NUM, CR.CR_REPORT_NUM AS I_REPORT_NUM, CR.CR_ISLAND AS I_ISLAND
			        FROM 
			        		CAFE_REVIEW CR
			        LEFT JOIN 
			        		MEMBER M
			        ON 
			        		CR.M_NO = M.M_NO
					 ) 
			)
		ORDER BY I_WRITTEN_DATE DESC
	
	
	</select>
	
	
	<!-- =============================================== 탈퇴 사유 통계 ====================================================== -->	
	
	<select id="wdData" resultType="java.util.HashMap" >
		select  w.w_reason ,w.w_no, count(*) as w_no_count FROM wd_record wr, withdrawal w 
		         WHERE w.w_no = wr.w_no group by w.w_no, w.w_reason
	</select>
	
	
	
	
	
</mapper>