<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 태그 내부에 sql문을 넣으면 mybatis가 알아서 해준다.. -->
<mapper namespace="com.soninlawisdice.mapper.SecondhandMapper">
	<!-- namespace를 만든 인터페이스와 맞춰주기 -->
	<!-- id를 service의 함수명과 맞춰주기 -->
	<!-- resultType을 지정해주면 해당 클래스 타입으로 결과값이 저장된다. -->
	
	<!-- ========== for island list =========== -->

	<resultMap id="memberMap" type="com.soninlawisdice.vo.MemberVO" >
			<id column="m_no" property="m_no"/>
			<result column="m_id" property="m_id"/>	
			<result column="m_nick" property="m_nick"/>
			<result column="m_id" property="m_id"/>
	</resultMap>
	
	<select id="selectTradeList" resultType="com.soninlawisdice.vo.TradeVO" parameterType="com.soninlawisdice.vo.SearchCriteria">
	
		SELECT 
			T.*
		FROM (
				SELECT 
					T.*, M.M_NICK, ROW_NUMBER() OVER(ORDER BY T_NO DESC) AS RNUM 
				FROM
					TRADE T
				LEFT JOIN
					MEMBER M
				ON T.M_NO = M.M_NO
				WHERE 
					1=1 <include refid="search"></include>
				ORDER BY
					T_WRITTEN_DATE DESC
			) T
		ORDER BY
				T_WRITTEN_DATE DESC
				
	</select> <!-- 1=1 조건 달아야, 처음에 검색어 없이 호출시에도, WHERE 하나만 남아서 BadGrammarException이 뜨지 않는다.. -->
	
	<select id="tradeListCount" parameterType="com.soninlawisdice.vo.SearchCriteria" resultType="int">

			SELECT 
				COUNT(T_NO)
			FROM 
				TRADE
			WHERE 
				1=1 <include refid="search"></include>	
			AND T_NO > 0

	</select>
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">AND T_TITLE LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'c'.toString()">AND T_CONTENT LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'w'.toString()">AND M_NICK LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'tc'.toString()">AND (T_TITLE LIKE '%' || #{keyword} || '%') or (T_CONTENT LIKE '%' || #{keyword} || '%')</if>
		</if>
	</sql>

</mapper>