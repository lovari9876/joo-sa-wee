<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.soninlawisdice.mapper.ContentMapper">

	<!-- ====================== 커뮤니티(일반 게시판) ======================== -->

	<!-- Board_writeVO resultMap -->
	<resultMap type="com.soninlawisdice.vo.Board_writeVO"
		id="Board_writeVO">
		<id column="bw_no" property="bw_no" />
		<result column="bt_no" property="bt_no" />
		<result column="m_no" property="m_no" />
		<result column="s_no" property="s_no" />
		<result column="bw_title" property="bw_title" />
		<result column="bw_content" property="bw_content" />
		<result column="bw_written_date" property="bw_written_date" />
		<result column="bw_updated_date" property="bw_updated_date" />
		<result column="bw_hit" property="bw_hit" />
		<result column="bw_recommend_num" property="bw_recommend_num" />
		<result column="bw_report_num" property="bw_report_num" />
		<result column="bw_island" property="bw_island" />
		<result column="bw_secret" property="bw_secret" />

		<collection javaType="com.soninlawisdice.vo.Board_typeVO"
			property="board_typeVO">
			<id column="bt_no" property="bt_no" />
			<result column="bt_name" property="bt_name" />
		</collection>

		<collection javaType="com.soninlawisdice.vo.MemberVO"
			property="memberVO">
			<id column="m_no" property="m_no" />
			<result column="m_nick" property="m_nick" />
		</collection>

		<collection javaType="com.soninlawisdice.vo.SubjectVO"
			property="subjectVO">
			<id column="s_no" property="s_no" />
			<result column="s_content" property="s_content" />
		</collection>
	</resultMap>

	<!-- 게시글 보기(content_view) -->
	<select id="selectContentOne" resultType="java.util.HashMap"
		parameterType="int">
		SELECT BW.BW_NO, BW.BW_TITLE, BW.BW_CONTENT,
		BW.BW_WRITTEN_DATE, BW.BW_UPDATED_DATE, BW.BW_HIT,
		BW.BW_RECOMMEND_NUM, BW.BW_REPORT_NUM, BW.BW_ISLAND, BW.BW_SECRET,
		M.M_NO, M.M_NICK, M.R_NO, BT.BT_NAME, BT.BT_NO, S.S_CONTENT
		FROM BOARD_WRITE
		BW, MEMBER M,
		BOARD_TYPE BT, SUBJECT S
		WHERE BW.M_NO = M.M_NO AND
		BW.BT_NO = BT.BT_NO AND 
		BW.S_NO = S.S_NO AND
		BW.BW_NO = #{bw_no}
	</select>

	<!-- 게시글 삭제 -->
	<delete id="deleteContent">
		DELETE FROM BOARD_WRITE WHERE BW_NO = #{bw_no}
	</delete>

	<!-- 게시글 조회수 -->
	<update id="upHitContent">
		UPDATE BOARD_WRITE SET BW_HIT = BW_HIT + 1 WHERE
		BW_NO = #{bw_no}
	</update>

	<!-- 게시글 추천수 증가 -->
	<update id="upRecommendContent">
		UPDATE BOARD_WRITE SET BW_RECOMMEND_NUM =
		BW_RECOMMEND_NUM +1 WHERE BW_NO = #{bw_no}
	</update>

	<!-- 게시글 추천수 증가하는 거 받아옴 -->
	<select id="selectRecommendContent" resultType="String">
		SELECT
		BW_RECOMMEND_NUM FROM BOARD_WRITE WHERE BW_NO = #{bw_no}
	</select>

	<!-- ReportVO resultMap -->
	<resultMap type="com.soninlawisdice.vo.ReportVO"
		id="ReportVO">
		<id column="r_no" property="r_no" />
		<result column="m_no" property="m_no" />
		<result column="r_type" property="r_type" />
		<result column="r_type_no" property="r_type_no" />
		<result column="r_content" property="r_content" />
		<result column="r_report_date" property="r_report_date" />

		<collection javaType="com.soninlawisdice.vo.Board_writeVO"
			property="board_writeVO">
			<id column="bw_no" property="bw_no" />
		</collection>

		<collection javaType="com.soninlawisdice.vo.MemberVO"
			property="memberVO">
			<id column="m_no" property="m_no" />
		</collection>

		<collection javaType="com.soninlawisdice.vo.CM_commentVO"
			property="cm_commentVO">
			<id column="cm_no" property="cm_no" />
		</collection>
	</resultMap>

	<!-- 게시글 신고글 쓰기 -->
	<insert id="insertReportBW">
		INSERT INTO REPORT (R_NO, M_NO, R_TYPE, R_TYPE_NO,
		R_CONTENT, R_REPORT_DATE)
		VALUES (REPORT_SEQ.NEXTVAL, #{m_no}, '게시글',
		#{r_type_no}, #{r_content},
		SYSDATE)
	</insert>

	<!-- 게시글 신고수 증가 -->
	<update id="updateReportBW">
		UPDATE BOARD_WRITE SET BW_REPORT_NUM = BW_REPORT_NUM
		+1 WHERE BW_NO = #{bw_no}
	</update>

	<!-- 게시글 아일랜드 1로 변경 -->
	<update id="updateIslandBW">
		UPDATE BOARD_WRITE SET BW_ISLAND = 1 WHERE BW_NO =
		#{bw_no}
	</update>

	<!-- m_no를 가져오기 위해 -->
	<select id="selectContentM" resultType="java.util.HashMap"
		parameterType="int">
		SELECT M_NO, M_REPORT_NUM FROM MEMBER WHERE M_NO =
		#{m_no}
	</select>

	<!-- 회원 신고글 쓰기 -->
	<insert id="insertReportM">
		INSERT INTO REPORT (R_NO, M_NO, R_TYPE, R_TYPE_NO,
		R_CONTENT, R_REPORT_DATE)
		VALUES (REPORT_SEQ.NEXTVAL, #{m_no}, '회원',
		#{r_type_no}, #{r_content},
		SYSDATE)
	</insert>

	<!-- 회원 신고수 증가 -->
	<update id="updateReportM">
		UPDATE MEMBER SET M_REPORT_NUM = M_REPORT_NUM +1
		WHERE M_NO = #{m_no}
	</update>

	<!-- 회원 등급 4로 변경 -->
	<update id="updateIslandM">
		UPDATE MEMBER SET R_NO = 4 WHERE M_NO = #{m_no}
	</update>

	<!-- cm_no를 가져오기 위해 -->
	<select id="selectContentCM" resultType="java.util.HashMap"
		parameterType="int">
		SELECT CM.CM_NO, CM.CM_REPORT_NUM, M.M_NO
		FROM CM_COMMENT CM, MEMBER M
		WHERE CM.M_NO = M.M_NO AND CM.CM_NO = #{cm_no}
	</select>

	<!-- 댓글 신고글 쓰기 -->
	<insert id="insertReportCM">
		INSERT INTO REPORT (R_NO, M_NO, R_TYPE, R_TYPE_NO,
		R_CONTENT, R_REPORT_DATE)
		VALUES (REPORT_SEQ.NEXTVAL, #{m_no}, '댓글',
		#{r_type_no}, #{r_content},
		SYSDATE)
	</insert>

	<!-- 댓글 신고수 증가 -->
	<update id="updateReportCM">
		UPDATE CM_COMMENT SET CM_REPORT_NUM = CM_REPORT_NUM
		+1 WHERE CM_NO = #{cm_no}
	</update>

	<!-- CM_commentVO resultMap -->
	<resultMap type="com.soninlawisdice.vo.CM_commentVO"
		id="CM_commentVO">
		<id column="cm_no" property="cm_no" />
		<result column="m_no" property="m_no" />
		<result column="cm_content" property="cm_content" />
		<result column="cm_written_date" property="cm_written_date" />
		<result column="cm_updated_date" property="cm_updated_date" />
		<result column="cm_type" property="cm_type" />
		<result column="cm_no2" property="cm_no2" />
		<result column="cm_recommend_num" property="cm_recommend_num" />
		<result column="cm_report_num" property="cm_report_num" />
		<result column="cm_rating" property="cm_rating" />
		<result column="cm_group" property="cm_group" />
		<result column="cm_step" property="cm_step" />
		<result column="cm_indent" property="cm_indent" />

		<collection javaType="com.soninlawisdice.vo.MemberVO"
			property="memberVO">
			<id column="m_no" property="m_no" />
			<result column="m_nick" property="m_nick" />
		</collection>
	</resultMap>

	<!-- 게시글 댓글 쓰기 -->
	<insert id="insertCommentBW">
		INSERT INTO CM_COMMENT (CM_NO, M_NO, CM_CONTENT,
		CM_WRITTEN_DATE,
		CM_UPDATED_DATE, CM_TYPE, CM_NO2, CM_RECOMMEND_NUM,
		CM_REPORT_NUM,
		CM_RATING, CM_GROUP, CM_STEP, CM_INDENT)
		VALUES
		(CM_COMMENT_SEQ.NEXTVAL, #{m_no}, #{cm_content}, SYSDATE, SYSDATE,
		'게시판',
		#{cm_no2}, 0, 0, 0, CM_COMMENT_SEQ.CURRVAL, 0, 0)
	</insert>

	<!-- 댓글쓰면 +5 point -->
	<update id="updatePoint">
		UPDATE MEMBER SET M_POINT = M_POINT + 5 WHERE M_NO =
		#{m_no}
	</update>

	<!-- 게시글 댓글 수정하기 view에서 사용 -->
	<select id="selectCommentOne" resultType="java.util.HashMap"
		parameterType="int">
		SELECT
		CM.*, M.M_NO, M.M_NICK
		FROM
		CM_COMMENT CM, MEMBER M, BOARD_WRITE BW
		WHERE
		CM.M_NO = M.M_NO AND
		CM.CM_NO2 = BW.BW_NO
		AND CM.CM_TYPE = '게시판' AND CM.CM_NO = #{cm_no}
	</select>

	<!-- 댓글 수정 -->
	<update id="updateCommentOne">
		UPDATE CM_COMMENT SET CM_CONTENT = #{cm_content},
		CM_UPDATED_DATE = SYSDATE WHERE CM_NO = #{cm_no}
	</update>

	<!-- 댓글 목록 -->
	<select id="selectCommentList" resultType="java.util.HashMap"
		parameterType="String">
		SELECT CM.CM_NO, M.M_NO, M.M_NICK, CM.CM_CONTENT,
		CM.CM_WRITTEN_DATE, CM.CM_UPDATED_DATE, CM.CM_TYPE, CM.CM_NO2,
		CM.CM_RECOMMEND_NUM, CM.CM_REPORT_NUM, CM.CM_RATING, CM.CM_GROUP,
		CM.CM_STEP, CM.CM_INDENT
		FROM CM_COMMENT CM, MEMBER M, BOARD_WRITE BW
		WHERE CM.M_NO =
		M.M_NO AND
		CM.CM_NO2 = BW.BW_NO
		AND CM.CM_TYPE = '게시판'
		AND CM.CM_NO2 = #{cm_no2}
		ORDER BY
		CM.CM_GROUP ASC, CM.CM_STEP ASC
	</select>

	<!-- 댓글 삭제 -->
	<delete id="deleteComment">
		DELETE FROM CM_COMMENT WHERE CM_NO = #{cm_no}
	</delete>

	<!-- 댓글 추천수 증가 -->
	<update id="upRecommendComment">
		UPDATE CM_COMMENT SET CM_RECOMMEND_NUM =
		CM_RECOMMEND_NUM +1 WHERE CM_NO = #{cm_no}
	</update>

	<!-- 댓글 추천수 증가하는 거 받아옴 -->
	<select id="selectRecommendComment" resultType="String">
		SELECT
		CM_RECOMMEND_NUM FROM CM_COMMENT WHERE CM_NO = #{cm_no}
	</select>

	<!-- 댓글 갯수 세기 -->
	<select id="selectCommentCount" resultType="java.util.HashMap"
		parameterType="String">
		SELECT COUNT(*)AS CM_COUNT FROM CM_COMMENT CM,
		BOARD_WRITE BW
		WHERE CM.CM_NO2 = BW.BW_NO AND CM.CM_TYPE = '게시판' AND
		CM.CM_NO2 = #{cm_no2}
	</select>

	<!-- 댓글 우선순위 -->
	<update id="updateReply">
		UPDATE CM_COMMENT SET CM_STEP = CM_STEP +1 WHERE
		CM_GROUP = #{cm_group}
		AND CM_STEP > #{cm_step}
	</update>

	<!-- 대댓글 쓰기 -->
	<insert id="insertReply">
		INSERT INTO CM_COMMENT (CM_NO, M_NO, CM_CONTENT,
		CM_WRITTEN_DATE,
		CM_UPDATED_DATE, CM_TYPE, CM_NO2, CM_RECOMMEND_NUM,
		CM_REPORT_NUM,
		CM_RATING, CM_GROUP, CM_STEP, CM_INDENT)
		VALUES
		(CM_COMMENT_SEQ.NEXTVAL, #{m_no}, #{cm_content}, SYSDATE, SYSDATE,
		'게시판',
		#{cm_no2}, 0, 0, 0, #{cm_group}, #{cm_step}+1, #{cm_indent}+1)
	</insert>


	<!-- ====================== 보부상 ======================== -->

	<!-- 중고거래 게시글 보기(content_view) -->
	<select id="selectContentTOne" resultType="java.util.HashMap"
		parameterType="int">
		SELECT T.T_NO, T.T_TITLE, T.T_CONTENT,
		T.T_WRITTEN_DATE,
		T.T_UPDATED_DATE, T.T_HIT,
		T.T_RECOMMEND_NUM, T.T_REPORT_NUM,
		T.T_ISLAND, T.T_PRICE,
		M.M_NICK, M.M_NO, BT.BT_NAME, BT.BT_NO, S.S_CONTENT
		FROM
		TRADE T, MEMBER M,
		BOARD_TYPE BT, SUBJECT S
		WHERE T.M_NO = M.M_NO AND
		T.BT_NO = BT.BT_NO
		AND T.S_NO = S.S_NO AND
		T.T_NO = #{t_no}
	</select>

	<!-- 중고거래 게시글 삭제 -->
	<delete id="deleteContentT">
		DELETE FROM TRADE WHERE T_NO = #{t_no}
	</delete>

	<!-- 중고거래 게시글 조회수 -->
	<update id="upHitContentT">
		UPDATE TRADE SET T_HIT = T_HIT + 1 WHERE
		T_NO =
		#{t_no}
	</update>

	<!-- 중고거래 게시글 추천수 증가 -->
	<update id="upRecommendContentT">
		UPDATE TRADE SET T_RECOMMEND_NUM =
		T_RECOMMEND_NUM +1
		WHERE T_NO = #{t_no}
	</update>

	<!-- 중고거래 게시글 추천수 증가하는 거 받아옴 -->
	<select id="selectRecommendContentT" resultType="String">
		SELECT
		T_RECOMMEND_NUM FROM TRADE WHERE T_NO = #{t_no}
	</select>

	<!-- 중고거래 신고글 쓰기 -->
	<insert id="insertReportT">
		INSERT INTO REPORT (R_NO, M_NO, R_TYPE, R_TYPE_NO,
		R_CONTENT, R_REPORT_DATE)
		VALUES (REPORT_SEQ.NEXTVAL, #{m_no}, '중고거래',
		#{r_type_no}, #{r_content},
		SYSDATE)
	</insert>

	<!-- 중고거래 신고수 증가 -->
	<update id="updateReportT">
		UPDATE TRADE SET T_REPORT_NUM = T_REPORT_NUM +1 WHERE
		T_NO = #{t_no}
	</update>

	<!-- 중고거래 아일랜드 1로 변경 -->
	<update id="updateIslandT">
		UPDATE TRADE SET T_ISLAND = 1 WHERE T_NO = #{t_no}
	</update>

	<!-- 중고거래 댓글 목록 -->
	<select id="selectCommentListT" resultType="java.util.HashMap"
		parameterType="String">
		SELECT CM.CM_NO, M.M_NO, M.M_NICK, CM.CM_CONTENT,
		CM.CM_WRITTEN_DATE, CM.CM_UPDATED_DATE, CM.CM_TYPE, CM.CM_NO2,
		CM.CM_RECOMMEND_NUM, CM.CM_REPORT_NUM, CM.CM_RATING, CM.CM_GROUP,
		CM.CM_STEP, CM.CM_INDENT
		FROM CM_COMMENT CM, MEMBER M, TRADE T
		WHERE
		CM.M_NO = M.M_NO AND
		CM.CM_NO2 = T.T_NO
		AND CM.CM_TYPE = '중고거래' AND
		CM.CM_NO2 = #{cm_no2}
		ORDER BY
		CM.CM_GROUP ASC, CM.CM_STEP ASC
	</select>

	<!-- 중고거래 댓글 쓰기 -->
	<insert id="insertCommentT">
		INSERT INTO CM_COMMENT (CM_NO, M_NO, CM_CONTENT,
		CM_WRITTEN_DATE,
		CM_UPDATED_DATE, CM_TYPE, CM_NO2, CM_RECOMMEND_NUM,
		CM_REPORT_NUM,
		CM_RATING, CM_GROUP, CM_STEP, CM_INDENT)
		VALUES
		(CM_COMMENT_SEQ.NEXTVAL, #{m_no}, #{cm_content}, SYSDATE, SYSDATE,
		'중고거래',
		#{cm_no2}, 0, 0, 0, CM_COMMENT_SEQ.CURRVAL, 0, 0)
	</insert>

	<!-- 중고거래 댓글 수정하기 view에서 사용 -->
	<select id="selectCommentT" resultType="java.util.HashMap"
		parameterType="String">
		SELECT CM.CM_NO, M.M_NO, M.M_NICK, CM.CM_CONTENT,
		CM.CM_WRITTEN_DATE, CM.CM_UPDATED_DATE, CM.CM_TYPE, CM.CM_NO2,
		CM.CM_RECOMMEND_NUM, CM.CM_REPORT_NUM, CM.CM_RATING, CM.CM_GROUP,
		CM.CM_STEP, CM.CM_INDENT
		FROM CM_COMMENT CM,
		MEMBER M, TRADE T
		WHERE
		CM.M_NO = M.M_NO AND
		CM.CM_NO2 = T.T_NO
		AND CM.CM_TYPE = '중고거래' AND
		CM.CM_NO = #{cm_no}
	</select>

	<!-- 중고거래 댓글 수정 -->
	<update id="updateCommentTOne">
		UPDATE CM_COMMENT SET CM_CONTENT = #{cm_content},
		CM_UPDATED_DATE = SYSDATE WHERE CM_NO = #{cm_no}
	</update>

	<!-- 중고거래 댓글 삭제 -->
	<delete id="deleteCommentT">
		DELETE FROM CM_COMMENT WHERE CM_NO = #{cm_no}
	</delete>

	<!-- 중고거래 댓글 추천수 증가 -->
	<update id="upRecommendCommentT">
		UPDATE CM_COMMENT SET CM_RECOMMEND_NUM =
		CM_RECOMMEND_NUM +1 WHERE CM_NO = #{cm_no}
	</update>

	<!-- 중고거래 댓글 추천수 증가하는 거 받아옴 -->
	<select id="selectRecommendCommentT" resultType="String">
		SELECT
		CM_RECOMMEND_NUM FROM CM_COMMENT WHERE CM_NO = #{cm_no}
	</select>

	<!-- 중고거래 댓글 갯수 세기 -->
	<select id="selectCommentCountT" resultType="java.util.HashMap"
		parameterType="String">
		SELECT COUNT(*)AS CM_COUNT FROM CM_COMMENT CM,
		TRADE T
		WHERE CM.CM_NO2 = T.T_NO AND CM.CM_TYPE = '중고거래' AND
		CM.CM_NO2 =
		#{cm_no2}
	</select>

	<!-- 중고거래 댓글 우선순위 -->
	<update id="updateReplyT">
		UPDATE CM_COMMENT SET CM_STEP = CM_STEP +1 WHERE
		CM_GROUP = #{cm_group}
		AND CM_STEP > #{cm_step}
	</update>

	<!-- 중고거래 대댓글 쓰기 -->
	<insert id="insertReplyT">
		INSERT INTO CM_COMMENT (CM_NO, M_NO, CM_CONTENT,
		CM_WRITTEN_DATE,
		CM_UPDATED_DATE, CM_TYPE, CM_NO2, CM_RECOMMEND_NUM,
		CM_REPORT_NUM,
		CM_RATING, CM_GROUP, CM_STEP, CM_INDENT)
		VALUES
		(CM_COMMENT_SEQ.NEXTVAL, #{m_no}, #{cm_content}, SYSDATE, SYSDATE,
		'중고거래',
		#{cm_no2}, 0, 0, 0, #{cm_group}, #{cm_step}+1, #{cm_indent}+1)
	</insert>

	<!-- ====================== 카페리뷰 ======================== -->

	<!-- 카페리뷰 게시글 보기(content_view) -->
	<select id="selectContentCROne" resultType="java.util.HashMap"
		parameterType="int">
		SELECT CR.CR_NO, CR.CR_TITLE, CR.CR_CONTENT,
		CR.CR_WRITTEN_DATE, CR.CR_UPDATED_DATE, CR.CR_HIT,
		CR.CR_RECOMMEND_NUM, CR.CR_REPORT_NUM, CR.CR_ISLAND,
		M.M_NICK, M.M_NO,
		BT.BT_NAME, BT.BT_NO, C.C_TITLE, C.C_NO
		FROM CAFE_REVIEW CR, MEMBER M,
		BOARD_TYPE BT, CAFE C
		WHERE CR.M_NO = M.M_NO AND CR.BT_NO = BT.BT_NO
		AND CR.C_NO = C.C_NO AND
		CR.CR_NO = #{cr_no}
	</select>

	<!-- 카페리뷰 게시글 삭제 -->
	<delete id="deleteContentCR">
		DELETE FROM CAFE_REVIEW WHERE CR_NO = #{cr_no}
	</delete>

	<!-- 카페리뷰 게시글 조회수 -->
	<update id="upHitContentCR">
		UPDATE CAFE_REVIEW SET CR_HIT = CR_HIT + 1 WHERE
		CR_NO = #{cr_no}
	</update>

	<!-- 카페리뷰 게시글 추천수 증가 -->
	<update id="upRecommendContentCR">
		UPDATE CAFE_REVIEW SET CR_RECOMMEND_NUM =
		CR_RECOMMEND_NUM +1 WHERE CR_NO = #{cr_no}
	</update>

	<!-- 카페리뷰 게시글 추천수 증가하는 거 받아옴 -->
	<select id="selectRecommendContentCR" resultType="String">
		SELECT
		CR_RECOMMEND_NUM FROM CAFE_REVIEW WHERE CR_NO = #{cr_no}
	</select>

	<!-- 카페리뷰 신고글 쓰기 -->
	<insert id="insertReportCR">
		INSERT INTO REPORT (R_NO, M_NO, R_TYPE, R_TYPE_NO,
		R_CONTENT, R_REPORT_DATE)
		VALUES (REPORT_SEQ.NEXTVAL, #{m_no}, '카페리뷰',
		#{r_type_no}, #{r_content},
		SYSDATE)
	</insert>

	<!-- 카페리뷰 신고수 증가 -->
	<update id="updateReportCR">
		UPDATE CAFE_REVIEW SET CR_REPORT_NUM = CR_REPORT_NUM
		+1 WHERE CR_NO = #{cr_no}
	</update>

	<!-- 카페리뷰 아일랜드 1로 변경 -->
	<update id="updateIslandCR">
		UPDATE CAFE_REVIEW SET CR_ISLAND = 1 WHERE CR_NO =
		#{cr_no}
	</update>

	<!-- 카페리뷰 댓글 목록 -->
	<select id="selectCommentListCR" resultType="java.util.HashMap"
		parameterType="String">
		SELECT CM.CM_NO, M.M_NO, M.M_NICK, CM.CM_CONTENT,
		CM.CM_WRITTEN_DATE, CM.CM_UPDATED_DATE, CM.CM_TYPE, CM.CM_NO2,
		CM.CM_RECOMMEND_NUM, CM.CM_REPORT_NUM, CM.CM_RATING, CM.CM_GROUP,
		CM.CM_STEP, CM.CM_INDENT
		FROM CM_COMMENT CM,
		MEMBER M, CAFE_REVIEW CR
		WHERE CM.M_NO = M.M_NO AND
		CM.CM_NO2 = CR.CR_NO
		AND CM.CM_TYPE = '카페리뷰'
		AND CM.CM_NO2 = #{cm_no2}
		ORDER BY
		CM.CM_GROUP ASC, CM.CM_STEP ASC
	</select>

	<!-- 카페리뷰 댓글 쓰기 -->
	<insert id="insertCommentCR">
		INSERT INTO CM_COMMENT (CM_NO, M_NO, CM_CONTENT,
		CM_WRITTEN_DATE,
		CM_UPDATED_DATE, CM_TYPE, CM_NO2, CM_RECOMMEND_NUM,
		CM_REPORT_NUM,
		CM_RATING, CM_GROUP, CM_STEP, CM_INDENT)
		VALUES
		(CM_COMMENT_SEQ.NEXTVAL, #{m_no}, #{cm_content}, SYSDATE, SYSDATE,
		'카페리뷰',
		#{cm_no2}, 0, 0, 0, CM_COMMENT_SEQ.CURRVAL, 0, 0)
	</insert>

	<!-- 카페리뷰 댓글 수정하기 view에서 사용 -->
	<select id="selectCommentCR" resultType="java.util.HashMap"
		parameterType="String">
		SELECT CM.CM_NO, M.M_NO, M.M_NICK, CM.CM_CONTENT,
		CM.CM_WRITTEN_DATE, CM.CM_UPDATED_DATE, CM.CM_TYPE, CM.CM_NO2,
		CM.CM_RECOMMEND_NUM, CM.CM_REPORT_NUM, CM.CM_RATING, CM.CM_GROUP,
		CM.CM_STEP, CM.CM_INDENT
		FROM CM_COMMENT CM, MEMBER M, CAFE_REVIEW CR
		WHERE CM.M_NO = M.M_NO AND
		CM.CM_NO2 = CR.CR_NO
		AND CM.CM_TYPE = '카페리뷰'
		AND CM.CM_NO = #{cm_no}
	</select>

	<!-- 카페리뷰 댓글 수정 -->
	<update id="updateCommentCROne">
		UPDATE CM_COMMENT SET CM_CONTENT = #{cm_content},
		CM_UPDATED_DATE = SYSDATE WHERE CM_NO = #{cm_no}
	</update>

	<!-- 카페리뷰 댓글 삭제 -->
	<delete id="deleteCommentCR">
		DELETE FROM CM_COMMENT WHERE CM_NO = #{cm_no}
	</delete>

	<!-- 카페리뷰 댓글 추천수 증가 -->
	<update id="upRecommendCommentCR">
		UPDATE CM_COMMENT SET CM_RECOMMEND_NUM =
		CM_RECOMMEND_NUM +1 WHERE CM_NO = #{cm_no}
	</update>

	<!-- 카페리뷰 댓글 추천수 증가하는 거 받아옴 -->
	<select id="selectRecommendCommentCR" resultType="String">
		SELECT
		CM_RECOMMEND_NUM FROM CM_COMMENT WHERE CM_NO = #{cm_no}
	</select>

	<!-- 카페리뷰 댓글 갯수 세기 -->
	<select id="selectCommentCountCR" resultType="java.util.HashMap"
		parameterType="String">
		SELECT COUNT(*)AS CM_COUNT FROM CM_COMMENT CM,
		CAFE_REVIEW CR
		WHERE CM.CM_NO2 = CR.CR_NO AND CM.CM_TYPE = '카페리뷰' AND
		CM.CM_NO2 = #{cm_no2}
	</select>

	<!-- 카페리뷰 댓글 우선순위 -->
	<update id="updateReplyCR">
		UPDATE CM_COMMENT SET CM_STEP = CM_STEP +1 WHERE
		CM_GROUP = #{cm_group}
		AND CM_STEP > #{cm_step}
	</update>

	<!-- 카페리뷰 대댓글 쓰기 -->
	<insert id="insertReplyCR">
		INSERT INTO CM_COMMENT (CM_NO, M_NO, CM_CONTENT,
		CM_WRITTEN_DATE,
		CM_UPDATED_DATE, CM_TYPE, CM_NO2, CM_RECOMMEND_NUM,
		CM_REPORT_NUM,
		CM_RATING, CM_GROUP, CM_STEP, CM_INDENT)
		VALUES
		(CM_COMMENT_SEQ.NEXTVAL, #{m_no}, #{cm_content}, SYSDATE, SYSDATE,
		'카페리뷰',
		#{cm_no2}, 0, 0, 0, #{cm_group}, #{cm_step}+1, #{cm_indent}+1)
	</insert>


	<!-- ====================== 한줄평 ======================== -->

	<!-- c_no을 가져오기 위해 -->
	<select id="selectContentCOne" resultType="java.util.HashMap"
		parameterType="int">
		SELECT C.C_NO, C.C_TITLE, C.C_ADD, C.C_PHONE,
		C.C_PEOPLE, C.C_TABLE, C.C_CHAIR, C.C_OPEN, C.C_CLOSE, C.C_REST,
		C.C_WRITTEN_DATE, C.C_UPDATED_DATE, C.C_HIT, BT.BT_NO
		FROM CAFE C,
		BOARD_TYPE BT
		WHERE C.BT_NO = BT.BT_NO AND C.C_NO = #{c_no}
	</select>

	<!-- 한줄평 댓글 목록 -->
	<select id="selectCommentListOR" resultType="java.util.HashMap"
		parameterType="String">
		SELECT CM.CM_NO, M.M_NO, M.M_NICK, CM.CM_CONTENT,
		CM.CM_WRITTEN_DATE, CM.CM_UPDATED_DATE, CM.CM_TYPE, CM.CM_NO2,
		CM.CM_RECOMMEND_NUM, CM.CM_REPORT_NUM, CM.CM_RATING, CM.CM_GROUP,
		CM.CM_STEP, CM.CM_INDENT
		FROM CM_COMMENT CM, MEMBER M, CAFE C
		WHERE
		CM.M_NO =
		M.M_NO AND
		CM.CM_NO2 = C.C_NO
		AND CM.CM_TYPE = '한줄평' AND
		CM.CM_NO2 = #{cm_no2}
		ORDER BY
		CM.CM_WRITTEN_DATE DESC
	</select>

	<!-- 한줄평 댓글 쓰기 -->
	<insert id="insertCommentOR">
		INSERT INTO CM_COMMENT (CM_NO, M_NO, CM_CONTENT,
		CM_WRITTEN_DATE,
		CM_UPDATED_DATE, CM_TYPE, CM_NO2, CM_RECOMMEND_NUM,
		CM_REPORT_NUM,
		CM_RATING, CM_GROUP, CM_STEP, CM_INDENT)
		VALUES
		(CM_COMMENT_SEQ.NEXTVAL, #{m_no}, #{cm_content}, SYSDATE, SYSDATE,
		'한줄평',
		#{cm_no2}, 0, 0, 0, CM_COMMENT_SEQ.CURRVAL, 0, 0)
	</insert>

	<!-- 한줄평 댓글 수정하기 view에서 사용 -->
	<select id="selectCommentOR" resultType="java.util.HashMap"
		parameterType="String">
		SELECT CM.CM_NO, M.M_NO, M.M_NICK, CM.CM_CONTENT,
		CM.CM_WRITTEN_DATE, CM.CM_UPDATED_DATE, CM.CM_TYPE, CM.CM_NO2,
		CM.CM_RECOMMEND_NUM, CM.CM_REPORT_NUM, CM.CM_RATING, CM.CM_GROUP,
		CM.CM_STEP, CM.CM_INDENT
		FROM CM_COMMENT CM, MEMBER M, CAFE C
		WHERE CM.M_NO = M.M_NO AND
		CM.CM_NO2 = C.C_NO
		AND CM.CM_TYPE = '한줄평'
		AND CM.CM_NO = #{cm_no}
	</select>

	<!-- 한줄평 댓글 수정 -->
	<update id="updateCommentOROne">
		UPDATE CM_COMMENT SET CM_CONTENT = #{cm_content},
		CM_UPDATED_DATE = SYSDATE WHERE CM_NO = #{cm_no}
	</update>

	<!-- 한줄평 댓글 삭제 -->
	<delete id="deleteCommentOR">
		DELETE FROM CM_COMMENT WHERE CM_NO = #{cm_no}
	</delete>

	<!-- 한줄평 댓글 추천수 증가 -->
	<update id="upRecommendCommentOR">
		UPDATE CM_COMMENT SET CM_RECOMMEND_NUM =
		CM_RECOMMEND_NUM +1 WHERE CM_NO = #{cm_no}
	</update>

	<!-- 한줄평 댓글 추천수 증가하는 거 받아옴 -->
	<select id="selectRecommendCommentOR" resultType="String">
		SELECT
		CM_RECOMMEND_NUM FROM CM_COMMENT WHERE CM_NO = #{cm_no}
	</select>

	<!-- 한줄평 댓글 갯수 세기 -->
	<select id="selectCommentCountOR" resultType="java.util.HashMap"
		parameterType="String">
		SELECT COUNT(*)AS CM_COUNT FROM CM_COMMENT CM,
		CAFE C
		WHERE CM.CM_NO2 = C.C_NO AND CM.CM_TYPE = '한줄평' AND
		CM.CM_NO2 =
		#{cm_no2}
	</select>

	<!-- ====================== 게임 상세정보 ======================== -->

	<!-- GameVO resultMap -->
	<resultMap type="com.soninlawisdice.vo.GameVO"
		id="GameVO">
		<id column="g_no" property="g_no" />
		<result column="g_name" property="g_name" />
		<result column="g_written_date" property="g_written_date" />
		<result column="g_updated_date" property="g_updated_date" />
		<result column="g_hit" property="g_hit" />
		<result column="g_recommend_num" property="g_recommend_num" />
		<result column="g_designer" property="g_designer" />
		<result column="cm_recommend_num" property="cm_recommend_num" />
		<result column="g_min" property="g_min" />
		<result column="g_max" property="g_max" />
		<result column="g_playtime" property="g_playtime" />
		<result column="g_age" property="g_age" />
		<result column="g_difficulty" property="g_difficulty" />
		<result column="g_release" property="g_release" />
		<result column="g_level" property="g_level" />
		<result column="g_ruletime" property="g_ruletime" />
		<result column="g_lang" property="g_lang" />
		<result column="g_inter" property="g_inter" />
		<result column="g_theme" property="g_theme" />
		<result column="g_replay" property="g_replay" />
		<result column="g_artwork" property="g_artwork" />
		<result column="g_contents" property="g_contents" />
		<result column="g_num" property="g_num" />
		<result column="g_image" property="g_image" />
		<result column="g_thumbnail" property="g_thumbnail" />

		<collection javaType="com.soninlawisdice.vo.Game_personVO"
			property="Game_personVO">
			<id column="g_no" property="g_no" />
			<result column="gp_person" property="gp_person" />
			<result column="gp_num" property="gp_num" />
		</collection>
	</resultMap>
	
	<!-- 게임 상세정보 view (game 테이블) -->
	<select id="selectGameDetailOne" resultType="java.util.HashMap"
		parameterType="int">
		SELECT * FROM GAME
		WHERE G_NO = #{g_no}
	</select>
	
	<!-- 게임 상세정보 view (game_person 테이블) -->
	<select id="selectGamePersonDetail" resultType="java.util.HashMap"
		parameterType="int">
		SELECT * FROM GAME_PERSON
		WHERE G_NO = #{g_no}
	</select>

	<!-- game 테이블 투표 -->
	<update id="updateGame">
		UPDATE GAME SET G_LEVEL = G_LEVEL + #{g_level},
		G_RULETIME = G_RULETIME + #{g_ruletime}, G_LANG = G_LANG + #{g_lang}, 
		G_INTER = G_INTER + #{g_inter}, G_THEME = G_THEME + #{g_theme}, 
		G_REPLAY = G_REPLAY + #{g_replay}, G_ARTWORK = G_ARTWORK + #{g_artwork},
		G_CONTENTS = G_CONTENTS + #{g_contents}, G_NUM = G_NUM + 1
		WHERE G_NO = #{g_no}
	</update>
	
	<!-- 추천인원 투표 시 insert -->
	<insert id="insertGamePerson1">
		INSERT INTO GAME_PERSON (G_NO, GP_PERSON, GP_NUM) VALUES (#{g_no}, 1, 0)
	</insert>
	<!-- 추천인원 투표 시 insert -->
	<insert id="insertGamePerson2">
		INSERT INTO GAME_PERSON (G_NO, GP_PERSON, GP_NUM) VALUES (#{g_no}, 2, 0)
	</insert>
	<!-- 추천인원 투표 시 insert -->
	<insert id="insertGamePerson3">
		INSERT INTO GAME_PERSON (G_NO, GP_PERSON, GP_NUM) VALUES (#{g_no}, 3, 0)
	</insert>
	<!-- 추천인원 투표 시 insert -->
	<insert id="insertGamePerson4">
		INSERT INTO GAME_PERSON (G_NO, GP_PERSON, GP_NUM) VALUES (#{g_no}, 4, 0)
	</insert>
	<!-- 추천인원 투표 시 insert -->
	<insert id="insertGamePerson5">
		INSERT INTO GAME_PERSON (G_NO, GP_PERSON, GP_NUM) VALUES (#{g_no}, 5, 0)
	</insert>
	<!-- 추천인원 투표 시 insert -->
	<insert id="insertGamePerson6">
		INSERT INTO GAME_PERSON (G_NO, GP_PERSON, GP_NUM) VALUES (#{g_no}, 6, 0)
	</insert>
	<!-- 추천인원 투표 시 insert -->
	<insert id="insertGamePerson7">
		INSERT INTO GAME_PERSON (G_NO, GP_PERSON, GP_NUM) VALUES (#{g_no}, 7, 0)
	</insert>
	<!-- 추천인원 투표 시 insert -->
	<insert id="insertGamePerson8">
		INSERT INTO GAME_PERSON (G_NO, GP_PERSON, GP_NUM) VALUES (#{g_no}, 8, 0)
	</insert>

	<!-- game_person 테이블 투표 -->
	<update id="updateGamePerson">
		UPDATE GAME_PERSON SET GP_NUM = GP_NUM +1 WHERE G_NO = #{g_no} AND GP_PERSON = #{gp_person}
	</update>
	
	<!-- 게임 상세정보 투표 결과 view -->
	<select id="selectGameDetailAvg" resultType="java.util.HashMap"
		parameterType="int">
		SELECT ROUND(G_LEVEL/G_NUM, 1) G_LEVEL_AVG, 
		ROUND(G_RULETIME/G_NUM) G_RULETIME_AVG,
		ROUND(G_LANG/G_NUM, 1) G_LANG_AVG,
		ROUND(G_INTER/G_NUM, 1) G_INTER_AVG,
		ROUND(G_THEME/G_NUM, 1) G_THEME_AVG,
		ROUND(G_REPLAY/G_NUM, 1) G_REPLAY_AVG,
		ROUND(G_ARTWORK/G_NUM, 1) G_ARTWORK_AVG,
		ROUND(G_CONTENTS/G_NUM, 1) G_CONTENTS_AVG
		FROM GAME
		WHERE G_NO = #{g_no} AND G_NUM != 0
	</select>
	
	<select id = "selectGameList" resultType="java.util.HashMap" >

		SELECT * FROM 
			(SELECT g_no, g_name, g_min, g_max, g_playtime, g_release, g_name_kor, g_image, g_thumbnail, g_updated_date, 
					ROW_NUMBER() OVER(ORDER BY g_name_kor DESC)AS RNUM,
					ROW_NUMBER() OVER(ORDER BY g_name_kor ASC)AS RNUM_COUNT
           		FROM game
               	WHERE 1=1
               	<include refid="game_init"></include>
                <include refid="game_search"></include>
            )G 
            WHERE RNUM_COUNT BETWEEN #{scri.rowStart} AND #{scri.rowEnd}
            ORDER BY RNUM DESC
	
	</select>
	
	<select id="game_listCount" resultType="int">
		SELECT COUNT(g_no)
		  FROM game
		 WHERE 1=1
		 <include refid="game_init"></include>
		 <include refid="game_search"></include>	
			AND g_no > 0

	</select>

	
	<sql id="game_search">
		<if test="scri.searchType != null">
			<if test="scri.searchType == 'a'.toString()">AND g_name_kor LIKE '%' || #{scri.keyword} || '%'</if>
			<if test="scri.searchType == 'b'.toString()">AND g_name LIKE '%' || #{scri.keyword} || '%'</if>
			<if test="scri.searchType == 'ab'.toString()">AND ((g_name_kor LIKE '%' || #{scri.keyword} || '%') or (g_name LIKE '%' || #{scri.keyword} || '%'))</if>
		</if>
	</sql>
	
	<sql id="game_init">
		<choose>
     		<when test='init == "가"'> AND g_name_kor BETWEEN NCHR(00109) AND NCHR(45207)</when>
     		<when test='init == "나"'> AND g_name_kor BETWEEN NCHR(45208) AND NCHR(45795)</when>
     		<when test='init == "다"'> AND g_name_kor BETWEEN NCHR(45796) AND NCHR(46971)</when>
     		<when test='init == "라"'> AND g_name_kor BETWEEN NCHR(46972) AND NCHR(47559)</when>
     		<when test='init == "마"'> AND g_name_kor BETWEEN NCHR(47560) AND NCHR(48147)</when>
     		<when test='init == "바"'> AND g_name_kor BETWEEN NCHR(48148) AND NCHR(49323)</when>
     		<when test='init == "사"'> AND g_name_kor BETWEEN NCHR(49324) AND NCHR(50499)</when>
     		<when test='init == "아"'> AND g_name_kor BETWEEN NCHR(50500) AND NCHR(51087)</when>
     		<when test='init == "자"'> AND g_name_kor BETWEEN NCHR(51088) AND NCHR(52263)</when>
     		<when test='init == "차"'> AND g_name_kor BETWEEN NCHR(52264) AND NCHR(52851)</when>
     		<when test='init == "카"'> AND g_name_kor BETWEEN NCHR(52852) AND NCHR(53439)</when>
     		<when test='init == "타"'> AND g_name_kor BETWEEN NCHR(53440) AND NCHR(54027)</when>
     		<when test='init == "파"'> AND g_name_kor BETWEEN NCHR(54028) AND NCHR(54615)</when>
     		<when test='init == "하"'> AND g_name_kor BETWEEN NCHR(54616) AND NCHR(55203)</when>
     		<when test='init == "num"'>AND <![CDATA[ g_name_kor <= NCHR(00109)]]></when>
     		
     		<otherwise>
     			AND g_no > 0
     		</otherwise>
     		
     	</choose>
		
		
	</sql>



</mapper>